    # deploy para branch main
# main -> (e2e depois) -> Sandbox
# create tag
# tag -> Staging -> Prod

variables:
  NODE_VERSION: node:18
  CI: 'true'
  GIT_DEPTH: 0

image: $NODE_VERSION

default:
  tags:
    - gitlab-runner-ec2
  cache:  # Cache modules using lock file
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  before_script:
      - printenv
      - echo "registry=https://registry.npmjs.org/" > .npmrc
      - echo "@wpmedia:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc
      - echo "@code-store-platform:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc
      - echo "@r7:registry=https://registry.npmjs.org/" >> .npmrc
      - echo "//registry.npmjs.org/:_authToken=${R7_NPM_TOKEN}" >> .npmrc
      - echo "@arcxp:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc
      - echo "SANDBOX_DEPLOYER_FUSION_RELEASE=${SANDBOX_DEPLOYER_FUSION_RELEASE}" > .env
      - echo "SANDBOX_DEPLOYER_ENDPOINT=${SANDBOX_DEPLOYER_ENDPOINT}" >> .env
      - echo "SANDBOX_DEPLOYER_ACCESS_TOKEN=${SANDBOX_DEPLOYER_ACCESS_TOKEN}" >> .env
      - echo "CONTENT_BASE=${CONTENT_BASE}" >> .env
      - echo "ARC_ACCESS_TOKEN=${ARC_ACCESS_TOKEN}" >> .env
      - export CONTENT_BASE=https://api.newr7.arcpublishing.com
      - export ARC_ACCESS_TOKEN=ED9JNTOPJNCVFGM16KJTA64VR8N9THODs22NHaACshFBzKy548diLkhE+80KCqJg7u8RGNBW
      - export SANDBOX_DEPLOYER_FUSION_RELEASE=3.3.7
      - export SANDBOX_DEPLOYER_ENDPOINT=api.sandbox.newr7.arcpublishing.com
      - export SANDBOX_DEPLOYER_ACCESS_TOKEN=G3NBPUSB0UN8K0VJ9C86H4TELANAMB77lZv+FF5Jj7LWpFGPJEtxagItA2X6Hk3Gn91/mlKE
      - npm ci --cache .npm --prefer-offline


stages:
  - deploy-sandbox
  - deploy-production

deploy-sandbox:
  stage: deploy-sandbox
  script:
    - apt-get update
    - DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
    - mkdir -p $DOCKER_CONFIG/cli-plugins
    - curl -SL https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
    - touch /bin/docker-compose
    - docker-compose version
    - node deployer.mjs

deploy-production:
  stage: deploy-production
  script:
    - apt-get update
    - node deployer.mjs -name="$CI_COMMIT_TAG"
  only:
    - tags
