# deploy para branch main
# main -> (e2e depois) -> Sandbox
# create tag
# tag -> Staging -> Prod

variables:
  NODE_VERSION: node:18
  CI: 'true'
  GIT_DEPTH: 0

image: $NODE_VERSION

default:
  tags:
    - gitlab-runner-ec2
  cache:  # Cache modules using lock file
    key:
      files:
        - package-lock.json
    paths:
      - .npm/  
  before_script:
      - printenv
      - echo "registry=https://registry.npmjs.org/" > .npmrc

      - echo "@wpmedia:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc

      - echo "@code-store-platform:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc

      - echo "@r7:registry=https://registry.npmjs.org/" >> .npmrc
      - echo "//registry.npmjs.org/:_authToken=${R7_NPM_TOKEN}" >> .npmrc

      - echo "@arcxp:registry=https://npm.pkg.github.com/" >> .npmrc
      - echo "//npm.pkg.github.com/:_authToken=${ARC_GITHUB_TOKEN}" >> .npmrc
      - cat .npmrc
      - npm ci --cache .npm --prefer-offline


stages:          # List of stages for jobs, and their order of execution
  - build
  - lint

build:     
  stage: build  
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

lint:     
  stage: lint  
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."